"""hasil peta lokasi, bidang overlap

Revision ID: 525e3b69f344
Revises: 
Create Date: 2023-08-16 18:00:53.221822

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '525e3b69f344'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bidang_overlap',
    sa.Column('geom', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parent_bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('parent_bidang_intersect_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('luas', sa.Numeric(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['parent_bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['parent_bidang_intersect_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_bidang_overlap_geom', 'bidang_overlap', ['geom'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_bidang_overlap_id'), 'bidang_overlap', ['id'], unique=False)
    op.create_table('draft_detail',
    sa.Column('geom', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('draft_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('luas', sa.Numeric(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['draft_id'], ['draft.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_draft_detail_geom', 'draft_detail', ['geom'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_draft_detail_id'), 'draft_detail', ['id'], unique=False)
    op.create_table('hasil_peta_lokasi',
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('kjb_dt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('request_peta_lokasi_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('planing_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('skpt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('no_peta', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('jenis_alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('luas_surat', sa.Numeric(), nullable=False),
    sa.Column('luas_ukur', sa.Numeric(), nullable=False),
    sa.Column('luas_nett', sa.Numeric(), nullable=True),
    sa.Column('luas_clear', sa.Numeric(), nullable=True),
    sa.Column('luas_gu_perorangan', sa.Numeric(), nullable=True),
    sa.Column('luas_gu_pt', sa.Numeric(), nullable=True),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status_hasil_peta_lokasi', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['kjb_dt_id'], ['kjb_dt.id'], ),
    sa.ForeignKeyConstraint(['pemilik_id'], ['pemilik.id'], ),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], ),
    sa.ForeignKeyConstraint(['request_peta_lokasi_id'], ['request_peta_lokasi.id'], ),
    sa.ForeignKeyConstraint(['skpt_id'], ['skpt.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hasil_peta_lokasi_id'), 'hasil_peta_lokasi', ['id'], unique=False)
    op.create_table('hasil_peta_lokasi_detail',
    sa.Column('tipe_overlap', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('hasil_peta_lokasi_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('luas_overlap', sa.Numeric(), nullable=True),
    sa.Column('keterangan', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bidang_overlap_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['bidang_overlap_id'], ['bidang_overlap.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['hasil_peta_lokasi_id'], ['hasil_peta_lokasi.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hasil_peta_lokasi_detail_id'), 'hasil_peta_lokasi_detail', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_hasil_peta_lokasi_detail_id'), table_name='hasil_peta_lokasi_detail')
    op.drop_table('hasil_peta_lokasi_detail')
    op.drop_index(op.f('ix_hasil_peta_lokasi_id'), table_name='hasil_peta_lokasi')
    op.drop_table('hasil_peta_lokasi')
    op.drop_index(op.f('ix_draft_detail_id'), table_name='draft_detail')
    op.drop_index('idx_draft_detail_geom', table_name='draft_detail', postgresql_using='gist')
    op.drop_table('draft_detail')
    op.drop_index(op.f('ix_bidang_overlap_id'), table_name='bidang_overlap')
    op.drop_index('idx_bidang_overlap_geom', table_name='bidang_overlap', postgresql_using='gist')
    op.drop_table('bidang_overlap')
    # ### end Alembic commands ###
