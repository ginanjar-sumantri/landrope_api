"""9_Kjb_Penjual

Revision ID: ea5a5595ee0a
Revises: 170fe766782c
Create Date: 2023-07-10 15:56:34.960917

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea5a5595ee0a'
down_revision = '170fe766782c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kjb_penjual',
    sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.ForeignKeyConstraint(['pemilik_id'], ['pemilik.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_penjual_id'), 'kjb_penjual', ['id'], unique=False)
    op.add_column('kjb_dt', sa.Column('desa_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('kjb_dt', sa.Column('desa_by_ttn_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('kjb_dt', sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('kjb_dt', sa.Column('project_by_ttn_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('kjb_dt', sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.drop_constraint('kjb_dt_planing_by_ttn_id_fkey', 'kjb_dt', type_='foreignkey')
    op.drop_constraint('kjb_dt_planing_id_fkey', 'kjb_dt', type_='foreignkey')
    op.create_foreign_key(None, 'kjb_dt', 'pemilik', ['pemilik_id'], ['id'])
    op.create_foreign_key(None, 'kjb_dt', 'project', ['project_id'], ['id'])
    op.create_foreign_key(None, 'kjb_dt', 'project', ['project_by_ttn_id'], ['id'])
    op.create_foreign_key(None, 'kjb_dt', 'desa', ['desa_id'], ['id'])
    op.create_foreign_key(None, 'kjb_dt', 'desa', ['desa_by_ttn_id'], ['id'])
    op.drop_column('kjb_dt', 'planing_id')
    op.drop_column('kjb_dt', 'planing_by_ttn_id')
    op.drop_constraint('kjb_hd_pemilik_id_fkey', 'kjb_hd', type_='foreignkey')
    op.drop_column('kjb_hd', 'pemilik_id')
    op.add_column('tanda_terima_notaris_hd', sa.Column('desa_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('tanda_terima_notaris_hd', sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('tanda_terima_notaris_hd', sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.drop_constraint('tanda_terima_notaris_hd_planing_id_fkey', 'tanda_terima_notaris_hd', type_='foreignkey')
    op.create_foreign_key(None, 'tanda_terima_notaris_hd', 'desa', ['desa_id'], ['id'])
    op.create_foreign_key(None, 'tanda_terima_notaris_hd', 'pemilik', ['pemilik_id'], ['id'])
    op.create_foreign_key(None, 'tanda_terima_notaris_hd', 'project', ['project_id'], ['id'])
    op.drop_column('tanda_terima_notaris_hd', 'planing_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tanda_terima_notaris_hd', sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tanda_terima_notaris_hd', type_='foreignkey')
    op.drop_constraint(None, 'tanda_terima_notaris_hd', type_='foreignkey')
    op.drop_constraint(None, 'tanda_terima_notaris_hd', type_='foreignkey')
    op.create_foreign_key('tanda_terima_notaris_hd_planing_id_fkey', 'tanda_terima_notaris_hd', 'planing', ['planing_id'], ['id'])
    op.drop_column('tanda_terima_notaris_hd', 'pemilik_id')
    op.drop_column('tanda_terima_notaris_hd', 'project_id')
    op.drop_column('tanda_terima_notaris_hd', 'desa_id')
    op.add_column('kjb_hd', sa.Column('pemilik_id', postgresql.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('kjb_hd_pemilik_id_fkey', 'kjb_hd', 'pemilik', ['pemilik_id'], ['id'])
    op.add_column('kjb_dt', sa.Column('planing_by_ttn_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('kjb_dt', sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'kjb_dt', type_='foreignkey')
    op.drop_constraint(None, 'kjb_dt', type_='foreignkey')
    op.drop_constraint(None, 'kjb_dt', type_='foreignkey')
    op.drop_constraint(None, 'kjb_dt', type_='foreignkey')
    op.drop_constraint(None, 'kjb_dt', type_='foreignkey')
    op.create_foreign_key('kjb_dt_planing_id_fkey', 'kjb_dt', 'planing', ['planing_id'], ['id'])
    op.create_foreign_key('kjb_dt_planing_by_ttn_id_fkey', 'kjb_dt', 'planing', ['planing_by_ttn_id'], ['id'])
    op.drop_column('kjb_dt', 'pemilik_id')
    op.drop_column('kjb_dt', 'project_by_ttn_id')
    op.drop_column('kjb_dt', 'project_id')
    op.drop_column('kjb_dt', 'desa_by_ttn_id')
    op.drop_column('kjb_dt', 'desa_id')
    op.drop_index(op.f('ix_kjb_penjual_id'), table_name='kjb_penjual')
    op.drop_table('kjb_penjual')
    # ### end Alembic commands ###
