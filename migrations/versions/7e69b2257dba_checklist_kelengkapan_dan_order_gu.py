"""Checklist Kelengkapan dan Order GU

Revision ID: 7e69b2257dba
Revises: 
Create Date: 2023-08-23 14:43:40.587865

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '7e69b2257dba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order_gambar_ukur',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status_bidang', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tipe_surat', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tujuan_surat_worker_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('tujuan_surat_notaris_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['tujuan_surat_notaris_id'], ['notaris.id'], ),
    sa.ForeignKeyConstraint(['tujuan_surat_worker_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_gambar_ukur_id'), 'order_gambar_ukur', ['id'], unique=False)
    op.create_table('order_gambar_ukur_tembusan',
    sa.Column('order_gambar_ukur_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('tembusan_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['order_gambar_ukur_id'], ['order_gambar_ukur.id'], ),
    sa.ForeignKeyConstraint(['tembusan_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_gambar_ukur_tembusan_id'), 'order_gambar_ukur_tembusan', ['id'], unique=False)
    op.create_table('checklist_kelengkapan_dokumen_hd',
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checklist_kelengkapan_dokumen_hd_id'), 'checklist_kelengkapan_dokumen_hd', ['id'], unique=False)
    op.create_table('order_gambar_ukur_bidang',
    sa.Column('order_gambar_ukur_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['order_gambar_ukur_id'], ['order_gambar_ukur.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_gambar_ukur_bidang_id'), 'order_gambar_ukur_bidang', ['id'], unique=False)
    op.create_table('checklist_kelengkapan_dokumen_dt',
    sa.Column('checklist_kelengkapan_dokumen_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('bundle_dt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('jenis_bayar', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dokumen_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bundle_dt_id'], ['bundle_dt.id'], ),
    sa.ForeignKeyConstraint(['checklist_kelengkapan_dokumen_hd_id'], ['checklist_kelengkapan_dokumen_hd.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['dokumen_id'], ['dokumen.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checklist_kelengkapan_dokumen_dt_id'), 'checklist_kelengkapan_dokumen_dt', ['id'], unique=False)
    op.add_column('bidang_overlap', sa.Column('status_luas', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('hasil_peta_lokasi', sa.Column('hasil_analisa_peta_lokasi', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('hasil_peta_lokasi_detail', sa.Column('status_luas', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('request_peta_lokasi', 'diterima_oleh')
    op.drop_column('request_peta_lokasi', 'diperiksa_oleh')
    op.drop_column('request_peta_lokasi', 'dibuat_oleh')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('request_peta_lokasi', sa.Column('dibuat_oleh', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('diperiksa_oleh', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('diterima_oleh', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('hasil_peta_lokasi_detail', 'status_luas')
    op.drop_column('hasil_peta_lokasi', 'hasil_analisa_peta_lokasi')
    op.drop_column('bidang_overlap', 'status_luas')
    op.drop_index(op.f('ix_checklist_kelengkapan_dokumen_dt_id'), table_name='checklist_kelengkapan_dokumen_dt')
    op.drop_table('checklist_kelengkapan_dokumen_dt')
    op.drop_index(op.f('ix_order_gambar_ukur_bidang_id'), table_name='order_gambar_ukur_bidang')
    op.drop_table('order_gambar_ukur_bidang')
    op.drop_index(op.f('ix_checklist_kelengkapan_dokumen_hd_id'), table_name='checklist_kelengkapan_dokumen_hd')
    op.drop_table('checklist_kelengkapan_dokumen_hd')
    op.drop_index(op.f('ix_order_gambar_ukur_tembusan_id'), table_name='order_gambar_ukur_tembusan')
    op.drop_table('order_gambar_ukur_tembusan')
    op.drop_index(op.f('ix_order_gambar_ukur_id'), table_name='order_gambar_ukur')
    op.drop_table('order_gambar_ukur')
    # ### end Alembic commands ###
