"""_m_0038

Revision ID: 1523f4a7009a
Revises: 48b67dd847f3
Create Date: 2023-12-06 11:20:26.175975

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '1523f4a7009a'
down_revision = '48b67dd847f3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bidang_history',
    sa.Column('meta_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trans_worker_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('trans_at', sa.DateTime(), nullable=False),
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['trans_worker_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bidang_history_id'), 'bidang_history', ['id'], unique=False)
    op.create_table('utj_khusus',
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pay_to', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('remark', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('payment_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('termin_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['termin_id'], ['termin.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utj_khusus_id'), 'utj_khusus', ['id'], unique=False)
    op.create_table('hasil_peta_lokasi_history',
    sa.Column('meta_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trans_worker_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('trans_at', sa.DateTime(), nullable=False),
    sa.Column('hasil_peta_lokasi_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['hasil_peta_lokasi_id'], ['hasil_peta_lokasi.id'], ),
    sa.ForeignKeyConstraint(['trans_worker_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hasil_peta_lokasi_history_id'), 'hasil_peta_lokasi_history', ['id'], unique=False)
    op.create_table('utj_khusus_detail',
    sa.Column('utj_khusus_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('kjb_dt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('invoice_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['kjb_dt_id'], ['kjb_dt.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['utj_khusus_id'], ['utj_khusus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utj_khusus_detail_id'), 'utj_khusus_detail', ['id'], unique=False)
    op.alter_column('bidang', 'id_bidang',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.create_unique_constraint(None, 'bidang', ['id_bidang_lama'])
    op.create_unique_constraint(None, 'bidang', ['id_bidang'])
    op.add_column('bidang_komponen_biaya', sa.Column('paid_amount', sa.Numeric(), nullable=True))
    op.add_column('spk_history', sa.Column('trans_worker_id', sqlmodel.sql.sqltypes.GUID(), nullable=False))
    op.add_column('spk_history', sa.Column('trans_at', sa.DateTime(), nullable=False))
    op.create_foreign_key(None, 'spk_history', 'worker', ['trans_worker_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'spk_history', type_='foreignkey')
    op.drop_column('spk_history', 'trans_at')
    op.drop_column('spk_history', 'trans_worker_id')
    op.drop_column('bidang_komponen_biaya', 'paid_amount')
    op.drop_constraint(None, 'bidang', type_='unique')
    op.drop_constraint(None, 'bidang', type_='unique')
    op.alter_column('bidang', 'id_bidang',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_index(op.f('ix_utj_khusus_detail_id'), table_name='utj_khusus_detail')
    op.drop_table('utj_khusus_detail')
    op.drop_index(op.f('ix_hasil_peta_lokasi_history_id'), table_name='hasil_peta_lokasi_history')
    op.drop_table('hasil_peta_lokasi_history')
    op.drop_index(op.f('ix_utj_khusus_id'), table_name='utj_khusus')
    op.drop_table('utj_khusus')
    op.drop_index(op.f('ix_bidang_history_id'), table_name='bidang_history')
    op.drop_table('bidang_history')
    # ### end Alembic commands ###
