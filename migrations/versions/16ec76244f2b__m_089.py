"""_m_089

Revision ID: 16ec76244f2b
Revises: 52971e8b2851
Create Date: 2024-03-23 12:36:40.833889

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '16ec76244f2b'
down_revision = '52971e8b2851'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_giro_detail',
    sa.Column('payment_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('giro_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['giro_id'], ['giro.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_giro_detail_id'), 'payment_giro_detail', ['id'], unique=False)
    op.create_table('payment_komponen_biaya_detail',
    sa.Column('payment_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('invoice_detail_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('payment_giro_detail_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('beban_biaya_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['beban_biaya_id'], ['beban_biaya.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['invoice_detail_id'], ['invoice_detail.id'], ),
    sa.ForeignKeyConstraint(['payment_giro_detail_id'], ['payment_giro_detail.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_komponen_biaya_detail_id'), 'payment_komponen_biaya_detail', ['id'], unique=False)
    op.drop_table('bidang_coba')
    op.drop_table('import_bidang_paid')
    op.drop_table('termin_temp')
    op.add_column('invoice', sa.Column('realisasi', sa.Boolean(), nullable=True))
    op.add_column('payment', sa.Column('termin_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.create_foreign_key(None, 'payment', 'termin', ['termin_id'], ['id'])
    op.add_column('payment_detail', sa.Column('payment_giro_detail_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('payment_detail', sa.Column('realisasi', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'payment_detail', 'payment_giro_detail', ['payment_giro_detail_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'payment_detail', type_='foreignkey')
    op.drop_column('payment_detail', 'realisasi')
    op.drop_column('payment_detail', 'payment_giro_detail_id')
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.drop_column('payment', 'termin_id')
    op.drop_column('invoice', 'realisasi')
    op.create_table('termin_temp',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('termin_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='termin_temp_pkey')
    )
    op.create_table('import_bidang_paid',
    sa.Column('id_bidang_lama', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('no_tahap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('pengajuan_pembayaran', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('pembayaran_cair', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('paid_amount', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('cutoff_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_bidang_lama', name='import_bidang_paid_pkey')
    )
    op.create_table('bidang_coba',
    sa.Column('geom', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('id_bidang', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('luas_surat', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('no_peta', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('skpt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id_bidang_lama', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('pemilik_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('jenis_bidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_surat_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kategori_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_sub_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_proyek_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('penampung_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('manager_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('sales_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telepon_mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notaris_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('informasi_tambahan', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('luas_ukur', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_nett', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_clear', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('bundle_hd_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_akta', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('sub_project_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('geom_ori', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('tahap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('njop', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_proses', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_produk', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('status_pembebasan', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_id', postgresql.UUID(), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_payment_komponen_biaya_detail_id'), table_name='payment_komponen_biaya_detail')
    op.drop_table('payment_komponen_biaya_detail')
    op.drop_index(op.f('ix_payment_giro_detail_id'), table_name='payment_giro_detail')
    op.drop_table('payment_giro_detail')
    # ### end Alembic commands ###
