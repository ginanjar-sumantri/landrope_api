"""_m_0074

Revision ID: 69be0ac9b455
Revises: efcdf9b8ce97
Create Date: 2024-02-19 12:12:27.045554

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '69be0ac9b455'
down_revision = 'efcdf9b8ce97'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keterangan_req_petlok',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_keterangan_req_petlok_id'), 'keterangan_req_petlok', ['id'], unique=False)
    op.create_table('kjb_history',
    sa.Column('meta_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trans_worker_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('trans_at', sa.DateTime(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.ForeignKeyConstraint(['trans_worker_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_history_id'), 'kjb_history', ['id'], unique=False)
    op.add_column('bidang', sa.Column('luas_proses', sa.Numeric(), nullable=True))
    op.add_column('bidang', sa.Column('luas_produk', sa.Numeric(), nullable=True))
    op.add_column('bidang', sa.Column('status_pembebasan', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('bidang_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.add_column('bundle_dt', sa.Column('multiple_count', sa.Integer(), nullable=True))
    op.drop_column('bundle_dt', 'history_data')
    op.add_column('dokumen', sa.Column('is_multiple', sa.Boolean(), nullable=True))
    op.add_column('giro', sa.Column('tanggal_buka', sa.Date(), nullable=True))
    op.add_column('giro', sa.Column('tanggal_cair', sa.Date(), nullable=True))
    op.add_column('hasil_peta_lokasi', sa.Column('luas_proses', sa.Numeric(), nullable=True))
    op.add_column('hasil_peta_lokasi', sa.Column('tanggal_kirim_berkas', sa.Date(), nullable=True))
    op.alter_column('hasil_peta_lokasi', 'planing_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.alter_column('hasil_peta_lokasi', 'skpt_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.alter_column('hasil_peta_lokasi', 'luas_surat',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('hasil_peta_lokasi', 'luas_ukur',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('hasil_peta_lokasi_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.add_column('kjb_dt', sa.Column('jumlah_waris', sa.Integer(), nullable=True))
    op.add_column('kjb_hd', sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('kjb_hd', 'kategori_penjual',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('kjb_hd', 'desa_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.alter_column('kjb_hd', 'luas_kjb',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('kjb_hd', 'manager_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.alter_column('kjb_hd', 'sales_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.alter_column('kjb_hd', 'ada_utj',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('kjb_hd', 'utj_amount',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('kjb_hd', 'satuan_bayar',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('kjb_hd', 'satuan_harga',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_unique_constraint(None, 'kjb_hd', ['code'])
    op.alter_column('payment', 'payment_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.add_column('request_peta_lokasi', sa.Column('tanggal_terima_berkas', sa.Date(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('tanggal_pengukuran', sa.Date(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('penunjuk_batas', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('surveyor', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('tanggal_kirim_ukur', sa.Date(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('luas_ukur', sa.Numeric(), nullable=True))
    op.add_column('request_peta_lokasi', sa.Column('keterangan_req_petlok_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.alter_column('request_peta_lokasi', 'remark',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'request_peta_lokasi', 'keterangan_req_petlok', ['keterangan_req_petlok_id'], ['id'])
    op.drop_column('request_peta_lokasi', 'is_disabled')
    op.add_column('spk', sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('spk_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=True)
    op.drop_column('tanda_terima_notaris_dt', 'history_data')
    op.add_column('termin', sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('workflow', sa.Column('version', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('workflow', 'version')
    op.drop_column('termin', 'file_path')
    op.add_column('tanda_terima_notaris_dt', sa.Column('history_data', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('spk_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.drop_column('spk', 'file_path')
    op.add_column('request_peta_lokasi', sa.Column('is_disabled', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'request_peta_lokasi', type_='foreignkey')
    op.alter_column('request_peta_lokasi', 'remark',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('request_peta_lokasi', 'keterangan_req_petlok_id')
    op.drop_column('request_peta_lokasi', 'luas_ukur')
    op.drop_column('request_peta_lokasi', 'tanggal_kirim_ukur')
    op.drop_column('request_peta_lokasi', 'surveyor')
    op.drop_column('request_peta_lokasi', 'penunjuk_batas')
    op.drop_column('request_peta_lokasi', 'tanggal_pengukuran')
    op.drop_column('request_peta_lokasi', 'tanggal_terima_berkas')
    op.alter_column('payment', 'payment_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.drop_constraint(None, 'kjb_hd', type_='unique')
    op.alter_column('kjb_hd', 'satuan_harga',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('kjb_hd', 'satuan_bayar',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('kjb_hd', 'utj_amount',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('kjb_hd', 'ada_utj',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('kjb_hd', 'sales_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.alter_column('kjb_hd', 'manager_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.alter_column('kjb_hd', 'luas_kjb',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('kjb_hd', 'desa_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.alter_column('kjb_hd', 'kategori_penjual',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('kjb_hd', 'file_path')
    op.drop_column('kjb_dt', 'jumlah_waris')
    op.alter_column('hasil_peta_lokasi_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.alter_column('hasil_peta_lokasi', 'luas_ukur',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('hasil_peta_lokasi', 'luas_surat',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('hasil_peta_lokasi', 'skpt_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.alter_column('hasil_peta_lokasi', 'planing_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.drop_column('hasil_peta_lokasi', 'tanggal_kirim_berkas')
    op.drop_column('hasil_peta_lokasi', 'luas_proses')
    op.drop_column('giro', 'tanggal_cair')
    op.drop_column('giro', 'tanggal_buka')
    op.drop_column('dokumen', 'is_multiple')
    op.add_column('bundle_dt', sa.Column('history_data', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('bundle_dt', 'multiple_count')
    op.alter_column('bidang_history', 'trans_worker_id',
               existing_type=postgresql.UUID(),
               nullable=False)
    op.drop_column('bidang', 'status_pembebasan')
    op.drop_column('bidang', 'luas_produk')
    op.drop_column('bidang', 'luas_proses')
    op.drop_index(op.f('ix_kjb_history_id'), table_name='kjb_history')
    op.drop_table('kjb_history')
    op.drop_index(op.f('ix_keterangan_req_petlok_id'), table_name='keterangan_req_petlok')
    op.drop_table('keterangan_req_petlok')
    # ### end Alembic commands ###
