"""28 Table KJB Pemilik Marketing

Revision ID: 7f2993d5eacd
Revises: e3312e901794
Create Date: 2023-06-07 16:44:51.244263

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '7f2993d5eacd'
down_revision = 'e3312e901794'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('beban',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beban_id'), 'beban', ['id'], unique=False)
    op.create_table('jenis_surat',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('jenis_alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jenis_surat_id'), 'jenis_surat', ['id'], unique=False)
    op.create_table('kontak',
    sa.Column('nomor_telepon', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kontak_id'), 'kontak', ['id'], unique=False)
    op.create_table('manager',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manager_id'), 'manager', ['id'], unique=False)
    op.create_table('pemilik',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pemilik_id'), 'pemilik', ['id'], unique=False)
    op.create_table('kjb_hd',
    sa.Column('kjb_id', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('penjual_tanah', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nama_group', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('kategori_penjual', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('desa_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('luas_kjb', sa.Numeric(), nullable=False),
    sa.Column('remark', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mediator', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telepon_mediator', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('ada_utj', sa.Boolean(), nullable=False),
    sa.Column('utj_amount', sa.Numeric(), nullable=False),
    sa.Column('satuan_bayar', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['desa_id'], ['desa.id'], ),
    sa.ForeignKeyConstraint(['pemilik_id'], ['pemilik.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_hd_id'), 'kjb_hd', ['id'], unique=False)
    op.create_table('rekening',
    sa.Column('nama_pemilik_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bank_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nomor_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pemilik_id'], ['pemilik.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rekening_id'), 'rekening', ['id'], unique=False)
    op.create_table('sales',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('manager_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sales_id'), 'sales', ['id'], unique=False)
    op.create_table('kjb_beban_biaya',
    sa.Column('beban_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('beban_pembeli', sa.Boolean(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['beban_id'], ['beban.id'], ),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_beban_biaya_id'), 'kjb_beban_biaya', ['id'], unique=False)
    op.create_table('kjb_cara_bayar',
    sa.Column('jenis_bayar', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nilai', sa.Numeric(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_cara_bayar_id'), 'kjb_cara_bayar', ['id'], unique=False)
    op.create_table('kjb_rekening',
    sa.Column('nama_pemilik_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bank_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nomor_rekening', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rekening_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.ForeignKeyConstraint(['rekening_id'], ['rekening.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_rekening_id'), 'kjb_rekening', ['id'], unique=False)
    op.create_table('kjb_dt',
    sa.Column('jenis_alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('posisi_bidang', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('harga_akta', sa.Numeric(), nullable=False),
    sa.Column('harga_transaksi', sa.Numeric(), nullable=False),
    sa.Column('luas_surat', sa.Numeric(), nullable=False),
    sa.Column('kjb_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('planing_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('jenis_surat_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jenis_surat_id'], ['jenis_surat.id'], ),
    sa.ForeignKeyConstraint(['kjb_hd_id'], ['kjb_hd.id'], ),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kjb_dt_id'), 'kjb_dt', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_kjb_dt_id'), table_name='kjb_dt')
    op.drop_table('kjb_dt')
    op.drop_index(op.f('ix_kjb_rekening_id'), table_name='kjb_rekening')
    op.drop_table('kjb_rekening')
    op.drop_index(op.f('ix_kjb_cara_bayar_id'), table_name='kjb_cara_bayar')
    op.drop_table('kjb_cara_bayar')
    op.drop_index(op.f('ix_kjb_beban_biaya_id'), table_name='kjb_beban_biaya')
    op.drop_table('kjb_beban_biaya')
    op.drop_index(op.f('ix_sales_id'), table_name='sales')
    op.drop_table('sales')
    op.drop_index(op.f('ix_rekening_id'), table_name='rekening')
    op.drop_table('rekening')
    op.drop_index(op.f('ix_kjb_hd_id'), table_name='kjb_hd')
    op.drop_table('kjb_hd')
    op.drop_index(op.f('ix_pemilik_id'), table_name='pemilik')
    op.drop_table('pemilik')
    op.drop_index(op.f('ix_manager_id'), table_name='manager')
    op.drop_table('manager')
    op.drop_index(op.f('ix_kontak_id'), table_name='kontak')
    op.drop_table('kontak')
    op.drop_index(op.f('ix_jenis_surat_id'), table_name='jenis_surat')
    op.drop_table('jenis_surat')
    op.drop_index(op.f('ix_beban_id'), table_name='beban')
    op.drop_table('beban')
    # ### end Alembic commands ###
