"""_m_0021

Revision ID: 7c94db47cf7d
Revises: 23dec8ea883a
Create Date: 2023-11-14 18:46:54.679581

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7c94db47cf7d'
down_revision = '23dec8ea883a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('bidang_clone')
    op.add_column('bidang_komponen_biaya', sa.Column('satuan_bayar', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('bidang_komponen_biaya', sa.Column('satuan_harga', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('bidang_komponen_biaya', sa.Column('amount', sa.Numeric(scale=2), nullable=True))
    op.add_column('bidang_overlap', sa.Column('is_show', sa.Boolean(), nullable=True))
    op.alter_column('giro', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.add_column('hasil_peta_lokasi', sa.Column('is_done', sa.Boolean(), nullable=True))
    op.add_column('invoice', sa.Column('use_utj', sa.Boolean(), nullable=True))
    op.add_column('invoice', sa.Column('void_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))
    op.add_column('invoice', sa.Column('void_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('invoice', sa.Column('void_at', sa.Date(), nullable=True))
    op.create_foreign_key(None, 'invoice', 'worker', ['void_by_id'], ['id'])
    op.drop_column('invoice_detail', 'amount')
    op.add_column('payment', sa.Column('void_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('payment', sa.Column('void_at', sa.Date(), nullable=True))
    op.add_column('payment_detail', sa.Column('void_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('payment_detail', sa.Column('void_at', sa.Date(), nullable=True))
    op.add_column('payment_detail', sa.Column('allocation_date', sa.Date(), nullable=True))
    op.add_column('spk', sa.Column('amount', sa.Numeric(scale=2), nullable=True))
    op.drop_column('spk', 'nilai')
    op.drop_column('termin', 'amount')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('termin', sa.Column('amount', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('spk', sa.Column('nilai', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.drop_column('spk', 'amount')
    op.drop_column('payment_detail', 'allocation_date')
    op.drop_column('payment_detail', 'void_at')
    op.drop_column('payment_detail', 'void_reason')
    op.drop_column('payment', 'void_at')
    op.drop_column('payment', 'void_reason')
    op.add_column('invoice_detail', sa.Column('amount', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'invoice', type_='foreignkey')
    op.drop_column('invoice', 'void_at')
    op.drop_column('invoice', 'void_reason')
    op.drop_column('invoice', 'void_by_id')
    op.drop_column('invoice', 'use_utj')
    op.drop_column('hasil_peta_lokasi', 'is_done')
    op.alter_column('giro', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_column('bidang_overlap', 'is_show')
    op.drop_column('bidang_komponen_biaya', 'amount')
    op.drop_column('bidang_komponen_biaya', 'satuan_harga')
    op.drop_column('bidang_komponen_biaya', 'satuan_bayar')
    op.create_table('bidang_clone',
    sa.Column('geom', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('id_bidang', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('luas_surat', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('no_peta', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('skpt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id_bidang_lama', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('pemilik_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('jenis_bidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_surat_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kategori_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_sub_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_proyek_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('penampung_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('manager_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('sales_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telepon_mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notaris_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('tahap', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('informasi_tambahan', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('luas_ukur', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_nett', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_clear', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('bundle_hd_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_akta', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('sub_project_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('geom_ori', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
