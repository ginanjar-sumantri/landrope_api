"""24 add table dokumen and bundle

Revision ID: 1fb400b5edd3
Revises: b4a20fa10e68
Create Date: 2023-05-26 15:30:44.660832

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1fb400b5edd3'
down_revision = 'b4a20fa10e68'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dokumen',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('dyn_form', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dokumen_id'), 'dokumen', ['id'], unique=False)
    op.create_table('bundle_hd',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('keyword', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('planing_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bundle_hd_id'), 'bundle_hd', ['id'], unique=False)
    op.create_table('bundle_dt',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('meta_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bundle_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('dokumen_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bundle_hd_id'], ['bundle_hd.id'], ),
    sa.ForeignKeyConstraint(['dokumen_id'], ['dokumen.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bundle_dt_id'), 'bundle_dt', ['id'], unique=False)
    op.drop_index('idx_rincik_geom', table_name='rincik')
    op.drop_index('ix_rincik_id', table_name='rincik')
    op.drop_table('rincik')
    op.add_column('code_counter', sa.Column('digit', sa.Integer(), nullable=True))
    op.add_column('desa', sa.Column('digit', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('desa', 'digit')
    op.drop_column('code_counter', 'digit')
    op.create_table('rincik',
    sa.Column('geom', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('id_rincik', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('estimasi_nama_pemilik', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('luas', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('alas_hak', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('jenis_dokumen', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('no_peta', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('jenis_lahan_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('skpt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['jenis_lahan_id'], ['jenis_lahan.id'], name='rincik_jenis_lahan_id_fkey'),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], name='rincik_planing_id_fkey'),
    sa.ForeignKeyConstraint(['skpt_id'], ['skpt.id'], name='rincik_skpt_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rincik_pkey')
    )
    op.create_index('ix_rincik_id', 'rincik', ['id'], unique=False)
    op.create_index('idx_rincik_geom', 'rincik', ['geom'], unique=False)
    op.drop_index(op.f('ix_bundle_dt_id'), table_name='bundle_dt')
    op.drop_table('bundle_dt')
    op.drop_index(op.f('ix_bundle_hd_id'), table_name='bundle_hd')
    op.drop_table('bundle_hd')
    op.drop_index(op.f('ix_dokumen_id'), table_name='dokumen')
    op.drop_table('dokumen')
    # ### end Alembic commands ###
