"""13_Update Mapping Table 

Revision ID: b4326dc4bf75
Revises: 72e08e4e14d5
Create Date: 2023-05-02 14:39:21.974993

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b4326dc4bf75'
down_revision = '72e08e4e14d5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mapping_planing_skpt',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('planing_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('skpt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], ),
    sa.ForeignKeyConstraint(['skpt_id'], ['skpt.id'], ),
    sa.PrimaryKeyConstraint('id', 'planing_id', 'skpt_id')
    )
    op.create_index(op.f('ix_mapping_planing_skpt_id'), 'mapping_planing_skpt', ['id'], unique=False)
    op.create_table('mapping_bidang_overlap',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('bidang_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('bidang_overlap_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('luas', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['bidang_overlap_id'], ['bidangoverlap.id'], ),
    sa.PrimaryKeyConstraint('id', 'bidang_id', 'bidang_overlap_id')
    )
    op.create_index(op.f('ix_mapping_bidang_overlap_id'), 'mapping_bidang_overlap', ['id'], unique=False)
    op.drop_table('mappingplaningskpt')
    op.drop_table('mappingbidangoverlap')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mappingbidangoverlap',
    sa.Column('bidang_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('bidang_overlap_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('luas', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bidang_id'], ['bidang.id'], name='mappingbidangoverlap_bidang_id_fkey'),
    sa.ForeignKeyConstraint(['bidang_overlap_id'], ['bidangoverlap.id'], name='mappingbidangoverlap_bidang_overlap_id_fkey'),
    sa.PrimaryKeyConstraint('bidang_id', 'bidang_overlap_id', name='mappingbidangoverlap_pkey')
    )
    op.create_table('mappingplaningskpt',
    sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('skpt_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], name='mappingplaningskpt_planing_id_fkey'),
    sa.ForeignKeyConstraint(['skpt_id'], ['skpt.id'], name='mappingplaningskpt_skpt_id_fkey'),
    sa.PrimaryKeyConstraint('planing_id', 'skpt_id', name='mappingplaningskpt_pkey')
    )
    op.drop_index(op.f('ix_mapping_bidang_overlap_id'), table_name='mapping_bidang_overlap')
    op.drop_table('mapping_bidang_overlap')
    op.drop_index(op.f('ix_mapping_planing_skpt_id'), table_name='mapping_planing_skpt')
    op.drop_table('mapping_planing_skpt')
    # ### end Alembic commands ###
