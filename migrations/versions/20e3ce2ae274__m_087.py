"""_m_087

Revision ID: 20e3ce2ae274
Revises: e8b88a61e754
Create Date: 2024-03-22 20:06:32.319054

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20e3ce2ae274'
down_revision = 'e8b88a61e754'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflow_next_approver',
    sa.Column('workflow_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_next_approver_id'), 'workflow_next_approver', ['id'], unique=False)
    op.create_table('bidangorigin',
    sa.Column('id_bidang', sa.String(), nullable=True),
    sa.Column('id_bidang_lama', sa.String(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('geom_ori', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('no_peta', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pemilik_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('jenis_bidang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('planing_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('sub_project_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('group', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('jenis_alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('jenis_surat_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('alashak', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kategori_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('kategori_sub_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('kategori_proyek_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('skpt_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('penampung_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('manager_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('sales_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('mediator', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telepon_mediator', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notaris_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('tahap', sa.Integer(), nullable=True),
    sa.Column('informasi_tambahan', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('luas_surat', sa.Numeric(), nullable=True),
    sa.Column('luas_ukur', sa.Numeric(), nullable=True),
    sa.Column('luas_gu_perorangan', sa.Numeric(), nullable=True),
    sa.Column('luas_gu_pt', sa.Numeric(), nullable=True),
    sa.Column('luas_nett', sa.Numeric(), nullable=True),
    sa.Column('luas_clear', sa.Numeric(), nullable=True),
    sa.Column('luas_pbt_perorangan', sa.Numeric(), nullable=True),
    sa.Column('luas_pbt_pt', sa.Numeric(), nullable=True),
    sa.Column('luas_bayar', sa.Numeric(), nullable=True),
    sa.Column('luas_proses', sa.Numeric(), nullable=True),
    sa.Column('luas_produk', sa.Numeric(), nullable=True),
    sa.Column('harga_akta', sa.Numeric(), nullable=True),
    sa.Column('harga_transaksi', sa.Numeric(), nullable=True),
    sa.Column('bundle_hd_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('njop', sa.Numeric(), nullable=True),
    sa.Column('status_pembebasan', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('updated_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['bundle_hd_id'], ['bundle_hd.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['jenis_surat_id'], ['jenis_surat.id'], ),
    sa.ForeignKeyConstraint(['kategori_id'], ['kategori.id'], ),
    sa.ForeignKeyConstraint(['kategori_proyek_id'], ['kategori_proyek.id'], ),
    sa.ForeignKeyConstraint(['kategori_sub_id'], ['kategori_sub.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.ForeignKeyConstraint(['notaris_id'], ['notaris.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['bidang.id'], ),
    sa.ForeignKeyConstraint(['pemilik_id'], ['pemilik.id'], ),
    sa.ForeignKeyConstraint(['penampung_id'], ['ptsk.id'], ),
    sa.ForeignKeyConstraint(['planing_id'], ['planing.id'], ),
    sa.ForeignKeyConstraint(['sales_id'], ['sales.id'], ),
    sa.ForeignKeyConstraint(['skpt_id'], ['skpt.id'], ),
    sa.ForeignKeyConstraint(['sub_project_id'], ['sub_project.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_bidang'),
    sa.UniqueConstraint('id_bidang_lama')
    )
    # op.create_index('idx_bidangorigin_geom', 'bidangorigin', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index('idx_bidangorigin_geom_ori', 'bidangorigin', ['geom_ori'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_bidangorigin_id'), 'bidangorigin', ['id'], unique=False)
    # op.drop_table('termin_temp')
    # op.drop_table('import_temp_bidang_recon')
    # op.drop_table('bidang_coba')
    # op.drop_table('import_bidang_paid')
    op.add_column('invoice', sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('invoice', 'payment_status')
    op.create_table('import_bidang_paid',
    sa.Column('id_bidang_lama', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('no_tahap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('pengajuan_pembayaran', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('pembayaran_cair', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('paid_amount', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('cutoff_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_bidang_lama', name='import_bidang_paid_pkey')
    )
    op.create_table('bidang_coba',
    sa.Column('geom', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('id_bidang', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('luas_surat', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('no_peta', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('planing_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('skpt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id_bidang_lama', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('pemilik_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('jenis_bidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jenis_surat_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kategori_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_sub_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('kategori_proyek_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('penampung_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('manager_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('sales_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telepon_mediator', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notaris_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('informasi_tambahan', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('luas_ukur', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_gu_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_nett', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_clear', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_perorangan', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_pbt_pt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('bundle_hd_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_akta', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('sub_project_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('geom_ori', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.Column('tahap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('njop', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_proses', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('luas_produk', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('status_pembebasan', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_id', postgresql.UUID(), autoincrement=False, nullable=True)
    )
    op.create_table('import_temp_bidang_recon',
    sa.Column('idbidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idbidanglama', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('alashak', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pemilik', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('project', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('desa', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ptsk', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sk_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('luas_surat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('jenis_bidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('manager', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sales', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notaris', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status_bidang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tahap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('luas_bayar', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('harga_transaksi', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('termin_temp',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('termin_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='termin_temp_pkey')
    )
    op.drop_index(op.f('ix_bidangorigin_id'), table_name='bidangorigin')
    op.drop_index('idx_bidangorigin_geom_ori', table_name='bidangorigin', postgresql_using='gist')
    op.drop_index('idx_bidangorigin_geom', table_name='bidangorigin', postgresql_using='gist')
    op.drop_table('bidangorigin')
    op.drop_index(op.f('ix_workflow_next_approver_id'), table_name='workflow_next_approver')
    op.drop_table('workflow_next_approver')
    # ### end Alembic commands ###
